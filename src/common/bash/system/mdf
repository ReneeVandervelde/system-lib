#!/usr/bin/env bash


function __usage {
    echo "USAGE: mdf [MARKDOWN]"
    echo ""
    echo "MARKDOWN:"
    echo "    Formatted markdown-like string, specialized for CLI outputs."
    echo ""
    echo "Supported Formatting:"
    __format_line "# Header Level 1"
    __format_line "## Header Level 2"
    __format_line "### Header Level 3"
    __format_line "*italic*"
    __format_line "**bold**"
    __format_line "_underline_"
    __format_line "~strikethrough~"
    __format_line "> Message"
    __format_line ">> Warning"
    __format_line ">>> Error"
    __format_line "+ Positive"
    __format_line "++ Success"
    __format_line "[+] Positive Checkbox"
    __format_line "[#] Unavailable Checkbox"
    __format_line "[?] Unknown Checkbox"
    __format_line "[-] Negative Checkbox"
}

ESC=$(printf '\033')
BOLD="$ESC[1m"
ITALIC="$ESC[3m"
UNDERLINE="$ESC[4m"
STRIKE="$ESC[9m"

BOLD_BLUE="$ESC[01;34m"
BLUE="$ESC[0;34m"

RED="$ESC[0;31m"
BOLD_RED="$ESC[01;31m"

YELLOW="$ESC[0;33m"
BOLD_YELLOW="$ESC[01;33m"

GREEN="$ESC[0;32m"
BOLD_GREEN="$ESC[01;32m"

MAGENTA="$ESC[0;35m"
BOLD_MAGENTA="$ESC[01;35m"

GRAY="$ESC[0;90m"

CLEAR="$ESC[0m"

function __format_line {
    OUT="$@"

    # Headings:
    OUT=$(echo "$OUT" | sed -r "s/^(# .*)$/$BOLD\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/^(## .*)$/$BOLD_BLUE\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/^(### .*)$/$BLUE\1$CLEAR/g")

    # Inline styles
    OUT=$(echo "$OUT" | sed -r "s/(\*\*.+?\*\*)/$BOLD\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/(^|[^*])(\*[^*]+\*)($|[^*])/\1$ITALIC\2$CLEAR\3/g")
    OUT=$(echo "$OUT" | sed -r "s/(_.+?_)/$UNDERLINE\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/(~.+?~)/$STRIKE\1$CLEAR/g")

    # Custom formatting
    OUT=$(echo "$OUT" | sed -r "s/^(> .*)$/$MAGENTA\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/^(>> .*)$/$BOLD_YELLOW\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/^(>>> .*)$/$BOLD_RED\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/^(\+ .*)$/$GREEN\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/^(\+\+ .*)$/$BOLD_GREEN\1$CLEAR/g")
    OUT=$(echo "$OUT" | sed -r "s/^\[\+\] /[$BOLD_GREEN+$CLEAR] /g")
    OUT=$(echo "$OUT" | sed -r "s/^\[\-\] /[$BOLD_RED-$CLEAR] /g")
    OUT=$(echo "$OUT" | sed -r "s/^\[\?\] /[$BOLD_YELLOW?$CLEAR] /g")
    OUT=$(echo "$OUT" | sed -r "s/^\[\#\] /[$GRAY#$CLEAR] /g")

    echo "$OUT"
}

if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    __usage
elif [ $# -gt 0 ]; then
    __format_line $@
else
    if [ -p /dev/stdin ]; then
        while IFS= read -r line; do
            __format_line "$line"
        done
    else
        __usage
    fi
fi
